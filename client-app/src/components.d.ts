/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface TkAddTaskItem {
    }
    interface TkAddWorksheet {
    }
    interface TkAppRoot {
    }
    interface TkAppSplash {
    }
    interface TkMatrixGrid {
        "worksheet": any;
    }
    interface TkMatrixGridZone {
        "reloadMatrixGridZone": () => Promise<void>;
        "zoneCaption": any;
        "zoneNumber": number;
    }
    interface TkTabMatrixGrid {
    }
    interface TkTaskList {
        "getTaskItemData": () => Promise<void>;
        "reloadTaskList": () => Promise<void>;
    }
    interface TkTaskListBar {
    }
    interface TkTaskListFilter {
    }
    interface TkTaskListItem {
        "clearEdit": () => Promise<void>;
        "filterType": any;
        "placedInZone": any;
        "taskItem": any;
    }
}
export interface TkAddTaskItemCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkAddTaskItemElement;
}
export interface TkAddWorksheetCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkAddWorksheetElement;
}
export interface TkAppSplashCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkAppSplashElement;
}
export interface TkMatrixGridZoneCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkMatrixGridZoneElement;
}
export interface TkTabMatrixGridCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkTabMatrixGridElement;
}
export interface TkTaskListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkTaskListElement;
}
export interface TkTaskListBarCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkTaskListBarElement;
}
export interface TkTaskListFilterCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkTaskListFilterElement;
}
export interface TkTaskListItemCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkTaskListItemElement;
}
declare global {
    interface HTMLTkAddTaskItemElement extends Components.TkAddTaskItem, HTMLStencilElement {
    }
    var HTMLTkAddTaskItemElement: {
        prototype: HTMLTkAddTaskItemElement;
        new (): HTMLTkAddTaskItemElement;
    };
    interface HTMLTkAddWorksheetElement extends Components.TkAddWorksheet, HTMLStencilElement {
    }
    var HTMLTkAddWorksheetElement: {
        prototype: HTMLTkAddWorksheetElement;
        new (): HTMLTkAddWorksheetElement;
    };
    interface HTMLTkAppRootElement extends Components.TkAppRoot, HTMLStencilElement {
    }
    var HTMLTkAppRootElement: {
        prototype: HTMLTkAppRootElement;
        new (): HTMLTkAppRootElement;
    };
    interface HTMLTkAppSplashElement extends Components.TkAppSplash, HTMLStencilElement {
    }
    var HTMLTkAppSplashElement: {
        prototype: HTMLTkAppSplashElement;
        new (): HTMLTkAppSplashElement;
    };
    interface HTMLTkMatrixGridElement extends Components.TkMatrixGrid, HTMLStencilElement {
    }
    var HTMLTkMatrixGridElement: {
        prototype: HTMLTkMatrixGridElement;
        new (): HTMLTkMatrixGridElement;
    };
    interface HTMLTkMatrixGridZoneElement extends Components.TkMatrixGridZone, HTMLStencilElement {
    }
    var HTMLTkMatrixGridZoneElement: {
        prototype: HTMLTkMatrixGridZoneElement;
        new (): HTMLTkMatrixGridZoneElement;
    };
    interface HTMLTkTabMatrixGridElement extends Components.TkTabMatrixGrid, HTMLStencilElement {
    }
    var HTMLTkTabMatrixGridElement: {
        prototype: HTMLTkTabMatrixGridElement;
        new (): HTMLTkTabMatrixGridElement;
    };
    interface HTMLTkTaskListElement extends Components.TkTaskList, HTMLStencilElement {
    }
    var HTMLTkTaskListElement: {
        prototype: HTMLTkTaskListElement;
        new (): HTMLTkTaskListElement;
    };
    interface HTMLTkTaskListBarElement extends Components.TkTaskListBar, HTMLStencilElement {
    }
    var HTMLTkTaskListBarElement: {
        prototype: HTMLTkTaskListBarElement;
        new (): HTMLTkTaskListBarElement;
    };
    interface HTMLTkTaskListFilterElement extends Components.TkTaskListFilter, HTMLStencilElement {
    }
    var HTMLTkTaskListFilterElement: {
        prototype: HTMLTkTaskListFilterElement;
        new (): HTMLTkTaskListFilterElement;
    };
    interface HTMLTkTaskListItemElement extends Components.TkTaskListItem, HTMLStencilElement {
    }
    var HTMLTkTaskListItemElement: {
        prototype: HTMLTkTaskListItemElement;
        new (): HTMLTkTaskListItemElement;
    };
    interface HTMLElementTagNameMap {
        "tk-add-task-item": HTMLTkAddTaskItemElement;
        "tk-add-worksheet": HTMLTkAddWorksheetElement;
        "tk-app-root": HTMLTkAppRootElement;
        "tk-app-splash": HTMLTkAppSplashElement;
        "tk-matrix-grid": HTMLTkMatrixGridElement;
        "tk-matrix-grid-zone": HTMLTkMatrixGridZoneElement;
        "tk-tab-matrix-grid": HTMLTkTabMatrixGridElement;
        "tk-task-list": HTMLTkTaskListElement;
        "tk-task-list-bar": HTMLTkTaskListBarElement;
        "tk-task-list-filter": HTMLTkTaskListFilterElement;
        "tk-task-list-item": HTMLTkTaskListItemElement;
    }
}
declare namespace LocalJSX {
    interface TkAddTaskItem {
        "onAddTaskItemSuccess"?: (event: TkAddTaskItemCustomEvent<any>) => void;
    }
    interface TkAddWorksheet {
        "onAddWorksheetSuccess"?: (event: TkAddWorksheetCustomEvent<any>) => void;
    }
    interface TkAppRoot {
    }
    interface TkAppSplash {
        "onRequestLoginAsGuest"?: (event: TkAppSplashCustomEvent<any>) => void;
    }
    interface TkMatrixGrid {
        "worksheet"?: any;
    }
    interface TkMatrixGridZone {
        "onTaskItemDrop"?: (event: TkMatrixGridZoneCustomEvent<any>) => void;
        "zoneCaption"?: any;
        "zoneNumber"?: number;
    }
    interface TkTabMatrixGrid {
        "onCloseWorksheetRequested"?: (event: TkTabMatrixGridCustomEvent<any>) => void;
        "onCurrentWorksheetUpdated"?: (event: TkTabMatrixGridCustomEvent<any>) => void;
    }
    interface TkTaskList {
        "onTaskItemDrop"?: (event: TkTaskListCustomEvent<any>) => void;
        "onTaskItemLoaded"?: (event: TkTaskListCustomEvent<any>) => void;
    }
    interface TkTaskListBar {
        "onBulkAddDialogClosed"?: (event: TkTaskListBarCustomEvent<any>) => void;
        "onTargetZoneUpdated"?: (event: TkTaskListBarCustomEvent<any>) => void;
        "onTaskItemUpdated"?: (event: TkTaskListBarCustomEvent<any>) => void;
        "onThemeChanged"?: (event: TkTaskListBarCustomEvent<any>) => void;
    }
    interface TkTaskListFilter {
        "onFilterTypeUpdated"?: (event: TkTaskListFilterCustomEvent<any>) => void;
    }
    interface TkTaskListItem {
        "filterType"?: any;
        "onDeleteTaskItemSuccess"?: (event: TkTaskListItemCustomEvent<any>) => void;
        "onTaskItemUpdated"?: (event: TkTaskListItemCustomEvent<any>) => void;
        "placedInZone"?: any;
        "taskItem"?: any;
    }
    interface IntrinsicElements {
        "tk-add-task-item": TkAddTaskItem;
        "tk-add-worksheet": TkAddWorksheet;
        "tk-app-root": TkAppRoot;
        "tk-app-splash": TkAppSplash;
        "tk-matrix-grid": TkMatrixGrid;
        "tk-matrix-grid-zone": TkMatrixGridZone;
        "tk-tab-matrix-grid": TkTabMatrixGrid;
        "tk-task-list": TkTaskList;
        "tk-task-list-bar": TkTaskListBar;
        "tk-task-list-filter": TkTaskListFilter;
        "tk-task-list-item": TkTaskListItem;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "tk-add-task-item": LocalJSX.TkAddTaskItem & JSXBase.HTMLAttributes<HTMLTkAddTaskItemElement>;
            "tk-add-worksheet": LocalJSX.TkAddWorksheet & JSXBase.HTMLAttributes<HTMLTkAddWorksheetElement>;
            "tk-app-root": LocalJSX.TkAppRoot & JSXBase.HTMLAttributes<HTMLTkAppRootElement>;
            "tk-app-splash": LocalJSX.TkAppSplash & JSXBase.HTMLAttributes<HTMLTkAppSplashElement>;
            "tk-matrix-grid": LocalJSX.TkMatrixGrid & JSXBase.HTMLAttributes<HTMLTkMatrixGridElement>;
            "tk-matrix-grid-zone": LocalJSX.TkMatrixGridZone & JSXBase.HTMLAttributes<HTMLTkMatrixGridZoneElement>;
            "tk-tab-matrix-grid": LocalJSX.TkTabMatrixGrid & JSXBase.HTMLAttributes<HTMLTkTabMatrixGridElement>;
            "tk-task-list": LocalJSX.TkTaskList & JSXBase.HTMLAttributes<HTMLTkTaskListElement>;
            "tk-task-list-bar": LocalJSX.TkTaskListBar & JSXBase.HTMLAttributes<HTMLTkTaskListBarElement>;
            "tk-task-list-filter": LocalJSX.TkTaskListFilter & JSXBase.HTMLAttributes<HTMLTkTaskListFilterElement>;
            "tk-task-list-item": LocalJSX.TkTaskListItem & JSXBase.HTMLAttributes<HTMLTkTaskListItemElement>;
        }
    }
}
